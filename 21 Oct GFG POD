class Solution {
    public ArrayList<Integer> topKFreq(int[] arr, int k) {
        Map<Integer, Integer> freqMap = new HashMap<>();

        // Count frequency of each element
        for (int num : arr) {
            freqMap.put(num, freqMap.getOrDefault(num, 0) + 1);
        }

        // PriorityQueue with custom comparator:
        // Higher frequency first, then higher value
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> {
            int freqA = freqMap.get(a);
            int freqB = freqMap.get(b);
            if (freqA == freqB) return b - a; // larger number first
            return freqB - freqA; // higher frequency first
        });

        pq.addAll(freqMap.keySet());

        ArrayList<Integer> result = new ArrayList<>();
        for (int i = 0; i < k && !pq.isEmpty(); i++) {
            result.add(pq.poll());
        }

        return result;
    }
}
