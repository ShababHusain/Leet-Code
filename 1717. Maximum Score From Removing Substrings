class Solution {
    public int maximumGain(String s, int x, int y) {
        if (x > y) {
            return gain(s, "ab", x, "ba", y);
        } else {
            return gain(s, "ba", y, "ab", x);
        }
    }

    private int gain(String s, String first, int firstScore, String second, int secondScore) {
        Stack<Character> stack1 = new Stack<>();
        int score = 0;

        // First pass: remove higher-value substrings
        for (char c : s.toCharArray()) {
            if (!stack1.isEmpty() && stack1.peek() == first.charAt(0) && c == first.charAt(1)) {
                stack1.pop();
                score += firstScore;
            } else {
                stack1.push(c);
            }
        }

        // Second pass: remove lower-value substrings
        Stack<Character> stack2 = new Stack<>();
        while (!stack1.isEmpty()) {
            char c = stack1.pop();
            if (!stack2.isEmpty() && c == second.charAt(0) && stack2.peek() == second.charAt(1)) {
                stack2.pop();
                score += secondScore;
            } else {
                stack2.push(c);
            }
        }

        return score;
    }
}
