class Solution {
    public int lengthAfterTransformations(String s, int t) {
        final int MOD = 1_000_000_007;
        int[] count = new int[26];

        // Initial frequency count
        for (char c : s.toCharArray()) {
            count[c - 'a']++;
        }

        // Apply transformations
        for (int step = 0; step < t; step++) {
            int[] next = new int[26];
            for (int i = 0; i < 25; i++) {
                next[i + 1] = count[i]; // shift a→b, b→c, ..., y→z
            }
            next[0] = (next[0] + count[25]) % MOD; // z → a
            next[1] = (next[1] + count[25]) % MOD; // z → b
            count = next;
        }

        // Final length
        int total = 0;
        for (int c : count) {
            total = (total + c) % MOD;
        }

        return total;
    }
}
