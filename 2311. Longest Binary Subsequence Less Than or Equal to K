class Solution {
    public int longestSubsequence(String s, int k) {
        int n = s.length();
        int ans = 0;
        long value = 0;
        long power = 1;

        // Traverse from rightmost side (LSB)
        for (int i = n - 1; i >= 0; i--) {
            char c = s.charAt(i);
            if (c == '0') {
                ans++; // zeros always safe
            } else {
                // Check if we can include this '1'
                if (value + power <= k) {
                    value += power;
                    ans++;
                }
            }
            // Prepare next bit (but stop if power exceeds k)
            if (power <= k) {
                power <<= 1;
            }
        }
        return ans;
    }
}
